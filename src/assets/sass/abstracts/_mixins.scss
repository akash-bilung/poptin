// =========  Media Queries  ========= //

$small-desktop: 960px;
$large-desktop: 1200px;
$handheld: 768px;
$handhelds-landscape: 1024px;
$laptop: 1024px;
$mobile: 640px;
$mobileSmall : 320px;
$mobile-landscape: 480px;

@mixin responsive($media) {

  @if $media == mobileSmall {
    @media only screen and (max-width: $mobileSmall) {
      @content;
    }
  }
  @if $media == largeDesktop {
    @media only screen and (max-width: $large-desktop) {
      @content;
    }
  }
  @if $media == smallDesktop {
    @media only screen and (max-width: $small-desktop) {
      @content;
    }
  }
  @if $media == handhelds {
    @media only screen and (max-width: $handheld) {
      @content;
    }
  }
  @if $media == laptops {
    @media only screen and (max-width: $laptop) {
      @content;
    }
  }
  @if $media == handhelds-landscape {
    @media only screen and (min-width: $handheld) and (max-width: $handhelds-landscape) and (orientation: landscape) {
      @content;
    }
  }
  @if $media == mobile {
    @media only screen and (max-width: $mobile) {
      @content;
    }
  }
  @if $media == mobile-portrait {
    @media only screen and (max-width: $mobile) and (orientation: portrait) {
      @content;
    }
  }
  @if $media == mobile-landscape {
    @media only screen and (min-width: 320px) and (max-width: $mobile-landscape) and (orientation: landscape) {
      @content;
    }
  }

  @if $media == retina {
    @media (-webkit-min-device-pixel-ratio: 2) {
      @content;
    }
  }

  @if $media == ipads {
    @media only screen and (min-width: 768px) and (max-width: 1024px) {
      @content;
    }
  }

  @if $media == ipads-landscape {
    @media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
      @content;
    }
  }

  @if $media == ipads-portrait {
    @media only screen and (min-width: 768px) and (max-width: 1024px) and (orientation: portrait) {
      @content;
    }
  }

  @if $media == iphone5 {
    @media only screen and (device-aspect-ratio: 40/71) {
      @content;
    }
  }
}

// Clearfix
@mixin clearfix {
  &::after {
    content: "";
    display: block;
    clear: both;
  }
}

// Centering element Vertically and Horizontally
@mixin centered($direction) {
  position: absolute;
  backface-visibility: hidden;

  @if $direction == vr {
    top: 50%;
    transform: translateY(-50%);
  } @else if $direction == hr{
    left: 50%;
    transform: translateX(-50%);
  } @else{
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// Color Map
$theme: () !default;
$theme: map-merge(
  (
    "primary": $primary,
    "gray-100": $gray-100,
    "danger": $danger,
    "black": $black,
    "info": $info,
    "white": $white
  ),
  $theme
);
